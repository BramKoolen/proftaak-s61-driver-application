image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - export GOOGLE_APPLICATION_CREDENTIALS=$app_distribution_account
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - clean
  - build
  - test
  - distribute

clean project:
  stage: clean
  tags:
    - clean
  script:
    - ./gradlew clean

build project:
  stage: build
  tags:
    - build
  script:
    - ./gradlew assembleQaTest
  artifacts:
    paths:
      - app/build/outputs/

test project:
  stage: test
  tags:
    - test
  script:
    - ./gradlew -Pci --console=plain :app:testQatest

distribute QaTest project:
  stage: distribute
  only:
    - Development
  tags:
    - distribute
  script:
    - ./gradlew assembleQaTest
    - ./gradlew -a appDistributionUploadQaTest

distribute acceptance project:
  stage: distribute
  only:
    - master
  tags:
    - distribute
  script:
    - ./gradlew assembleAcceptance
    - ./gradlew -a appDistributionUploadAcceptance